[project]
name = "micropython-networkutils"
description = "Micropython network interface utility package."
authors = [{name = "Andrew Ridyard", email = "andyrids.uncapped698@passmail.net"}]
maintainers = [{name = "Andrew Ridyard", email = "andyrids.uncapped698@passmail.net"}]
dynamic = ["version"]
license = {file = "LICENSE.md"}
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10"
classifiers=[
    # 3 - Alpha | 4 - Beta | 5 - Production/Stable
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    # Python versions
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: MicroPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Embedded Systems",
]
keywords = ["micropython", "package", "microcontroller", "network"]
dependencies = []

# this is a uv workspace package
[project.optional-dependencies]
mqtt = ["micropython-networkutils-mqtt"]

[dependency-groups]
dev = [
    "bump-my-version>=1.1.2",
    "hatch>=1.14.1",
    "micropython-rp2-rpi-pico-w-stubs>=1.25.0.post3",
    "micropython-stdlib-stubs>=1.25.0",
    "mpremote>=1.25.0",
    "mpy-cross>=1.25.0,<1.26.0",
    "pytest>=8.4.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.11.5",
]

[project.urls]
Repository = "https://gitlab.com/micropython-iot-projects/libraries/micropython-networkutils"
Issues = "https://gitlab.com/micropython-iot-projects/libraries/micropython-networkutils/-/issues"


# enables the `mqtt` optional dependency with `networkutils-mqtt` as a uv workspace
[tool.uv.sources]
micropython-networkutils-mqtt = { workspace = true }

# all workspace packages go here
[tool.uv.workspace]
members = ["networkutils-mqtt"]

[tool.ruff]
exclude = ["lib", "env"]
indent-width = 4
line-length = 80

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"

[tool.ruff.lint]
select = [
    "D1",  # pydocstyle
    "E",   # pycodestyle
    "ERA", # commented out code
    "W",   # pycodestyle
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/{test_}*" = ["D102"] # Missing docstring in public method

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]

[tool.bumpversion]
current_version = "0.1.0"
commit = true
commit_args = "--no-verify"
tag = true
tag_name = "v{new_version}"
tag_message = "chore: tag version update {current_version} -> {new_version}."
allow_dirty = false
message = "chore: version update {current_version} -> {new_version}."


# update package.json version
[[tool.bumpversion.files]]
filename = "network-utils/package.json"
search = '"version": "{current_version}"'
replace = '"version": "{new_version}"'

# update package manifest.py version
[[tool.bumpversion.files]]
filename = "network-utils/manifest.py"
search = 'version="{current_version}"'
replace = 'version="{new_version}"'

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist.hooks.custom]
# custom build hook configuration
path = "scripts/build/compile.py"
# custom build hook options
only-include = ["networkutils/networkutils"]
compiler-options = ["-O2"]

# `packages` causes DIR collapse i.e. `networkutils/networkutils` -> `networkutils` and
# `only-include` set to `networkutils` in the extension packages' `pyproject.toml`
# files, enables a `networkutils` namespace and therefore a namespace package installation.
[tool.hatch.build.targets.sdist]
packages = ["networkutils/networkutils"]

[tool.hatch.build.targets.wheel]
packages = ["networkutils/networkutils"]

[tool.hatch.version]
source = "vcs"